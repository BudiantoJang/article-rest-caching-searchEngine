// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/port/reader.go

// Package mock is a generated GoMock package.
package mock

import (
	model "jang-article/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConfigReader is a mock of ConfigReader interface.
type MockConfigReader struct {
	ctrl     *gomock.Controller
	recorder *MockConfigReaderMockRecorder
}

// MockConfigReaderMockRecorder is the mock recorder for MockConfigReader.
type MockConfigReaderMockRecorder struct {
	mock *MockConfigReader
}

// NewMockConfigReader creates a new mock instance.
func NewMockConfigReader(ctrl *gomock.Controller) *MockConfigReader {
	mock := &MockConfigReader{ctrl: ctrl}
	mock.recorder = &MockConfigReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigReader) EXPECT() *MockConfigReaderMockRecorder {
	return m.recorder
}

// Read mocks base method.
func (m *MockConfigReader) Read() (model.Config, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read")
	ret0, _ := ret[0].(model.Config)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockConfigReaderMockRecorder) Read() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockConfigReader)(nil).Read))
}
