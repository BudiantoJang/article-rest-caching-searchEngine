// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/port/usecases.go

// Package mock is a generated GoMock package.
package mock

import (
	port "jang-article/internal/port"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUsecases is a mock of Usecases interface.
type MockUsecases struct {
	ctrl     *gomock.Controller
	recorder *MockUsecasesMockRecorder
}

// MockUsecasesMockRecorder is the mock recorder for MockUsecases.
type MockUsecasesMockRecorder struct {
	mock *MockUsecases
}

// NewMockUsecases creates a new mock instance.
func NewMockUsecases(ctrl *gomock.Controller) *MockUsecases {
	mock := &MockUsecases{ctrl: ctrl}
	mock.recorder = &MockUsecasesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsecases) EXPECT() *MockUsecasesMockRecorder {
	return m.recorder
}

// GetArticleUsecase mocks base method.
func (m *MockUsecases) GetArticleUsecase() port.ArticleUsecase {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetArticleUsecase")
	ret0, _ := ret[0].(port.ArticleUsecase)
	return ret0
}

// GetArticleUsecase indicates an expected call of GetArticleUsecase.
func (mr *MockUsecasesMockRecorder) GetArticleUsecase() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetArticleUsecase", reflect.TypeOf((*MockUsecases)(nil).GetArticleUsecase))
}
